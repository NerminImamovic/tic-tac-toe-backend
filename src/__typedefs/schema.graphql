# source: http://localhost:4000/graphql
# timestamp: Mon Apr 20 2020 22:05:06 GMT+0200 (Central European Summer Time)

type Game {
  id: ID
  player1Id: ID
  player2Id: ID
  nextTurnPlayerId: ID
  winnerId: ID
  Player1: PublicUser
  Player2: PublicUser
  NextTurnPlayer: PublicUser
  Winner: PublicUser
  status: GameStatus
  type: GameType
  Moves: [Move]
  player1Fields: [Int]
  player2Fields: [Int]
  emptyFields: [Int]
  timestamp: String
}

enum GameStatus {
  NOTSTARTED
  INPLAY
  FINISHED_TIE
  FINISHED_WIN
}

enum GameType {
  SINGLEPLAYER
  MULTIPLAYER
}

""" input to create a new game """
input InputCreateGame {
  gameType: GameType
  player1Id: ID
}

""" input to join game """
input InputJoinGame {
  gameId: ID
  player2Id: ID
}

""" used for logging in """
input InputLogin {
  email: String!
  password: String!
}

""" input to create a move """
input InputMakeMove {
  gameId: ID
  playerId: ID
  field: Int
}

""" used for creating a new user """
input InputRegisterUser {
  name: String!
  email: String!
  password: String!
}

type Move {
  id: ID
  gameId: ID
  playerId: ID
  field: Int
  Player: PublicUser
  timestamp: String
}

type Mutation {
  _empty: String

  """ create a new game """
  createGame(input: InputCreateGame!): Game

  """ join game"""
  joinGame(input: InputJoinGame!): Game

  """ register a new user """
  registerUser(input: InputRegisterUser!): User

  """ create a new post """
  makeMove(input: InputMakeMove!): [Move]
}

""" a type defining a user's public data """
type PublicUser {
  id: ID
  name: String
  email: String
  type: UserType
}

type Query {
  _empty: String

  """ get all games"""
  getGames: [Game]

  """ get game by ID """
  game(id: ID!): Game

  """ login as a user """
  loginUser(input: InputLogin!): User

  """ get a user's public data"""
  getUser(id: ID!): PublicUser
}

type Subscription {
  _empty: String

  """ called when a move is made """
  liveResult: Game
}

""" a type defining a user  """
type User {
  id: ID
  name: String
  email: String
  token: String
  type: UserType
}

enum UserType {
  REAL
  COMPUTER
}
